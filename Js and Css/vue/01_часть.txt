######################################

https://vuejs.org/guide/introduction.html#api-styles - первые три пункта здесь:

1) vue это JS фрэймворк, который ставиться из npm

Декларативная отрисовка: vue расширяет стандартный HTML синтаксисом шаблонов, который позволяет
описывать HTML вывод на основе состояния JS

Реактивность: vue автоматически отслеживает JS состояние и его изменения и эффективно обновляет
DOM когда это происходит 

VUE - удобная вещь: достаточно вспомнить примеры из реальной практики: компоненты, модалки, vuex и так далее

2) Single-File Components

однофайловые компоненты - объединяет логику (JS), шаблон (HTML), стили (CSS) в один файл и изолирует ее от внешнего 
вмешательства (инкапсулирует ее).

3) API Styles
- Options API (ООП подход)
здесь мы описываем логику компонента используя объект с вариантами "data, methods, mounted" и так далее
export default {

- Composition API (функциональный подход)
здесь мы описываем логику компонента импортируя функции API
<script setup>

######################################

Проход по верхам функционала с options и composition API, а также с html и sfc
https://vuejs.org/tutorial/#step-1

Различные примеры с options и composition API, а также с html и sfc
https://vuejs.org/examples/#hello-world
