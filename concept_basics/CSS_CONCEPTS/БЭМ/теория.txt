https://www.youtube.com/watch?v=FH-t1mt-lSs

https://ru.bem.info/methodology/quick-start/
https://www.youtube.com/watch?v=HihYQVuH64U

БЭМ.

методология - это особый свод правил наименования классов для работы с ними в препроцессорах.

в основе БЭМ лежит принцип разделения интерфейса на независимые блоки.

БЛОК
ЭЛЕМЕНТ
МОДИФИКАТОР

##################################

блок - функционально независимый компонент страницы, который может быть использован несколько раз
когда мы задает блоку имя класса - задаем вопрос "что это?", а не какой и как выглядит
пишем латинскими буквами в нижнем регистре - разделяем тире

придумывая имена для блоков вы должны максимально отобразить их содержимое, например - логотип, 
меню, title, sub-title и так далее

чем лучше имена блоков будут отражать их содержимое - тем проще будет ориентироваться в коде

что касается стилей блока - то ему не стоит задавать внешнюю геометрию, например отступы или 
позиционирование - ТАКИМ образом обеспечивается независимость блока, его повторное
использование или перенос с места на место

- Блоки можно вкладывать друг в друга
- Допустима абсолютно любая вложенность блоков

<!-- блок about -->
<div class="about">
	<!-- вложенный блок title -->
	<div class="title"></div>
	<!-- вложенный блок subtitle-->
	<div class="subtitle"></div>
</div>

##################################

элемент - неотъемлимая составная часть блока, которая не может использоваться в отрыве от него

так же как имя блока, имя элемента должно отвечать на вопрос "что это"?

имяклассаблока__имяэлемента

например у нас есть меню, а у него есть 4 пункта, вот эти четыре пункта и будут элементами

<!-- меню - это блок -->
<nav class="menu">
	<!-- menu__item это элемент блока меню -->
	<a href="#" class="menu__item">text</a>
	<a href="#" class="menu__item">text</a>
	<a href="#" class="menu__item">text</a>
	<a href="#" class="menu__item">text</a>
</nav>

- Элементы можно вкладывать друг в друга
- Допустима любая вложенность элементов
- Элемент это всегда часть блока, а не другого элемента

НЕЛЬЗЯ, НЕ СТОИТ - имякласса__имяэлемента__имяэлемента - прописывать иерархию элементов

<!-- Верно -->
<!-- блок row -->
<div class="row">
	<!-- Элемент column -->
	<div class="row__column">
		<!-- Элемент item -->
		<div class="row__item">
	</div>
</div>

<!-- Неверно -->
<!-- блок row -->
<div class="row">
	<!-- Элемент column -->
	<div class="row__column">
		<!-- Элемент item -->
		<div class="row__column__item">
	</div>
</div>

- Элемент всегда должен быть частью блока и не должен использоваться отдельно от него

<!-- Верно -->
<!-- блок about -->
<div class="about">
	<!-- элемент title -->
	<div class="about__title"></div>
	<!-- элемент subtitle-->
	<div class="about__subtitle"></div>
</div>

<!-- Неверно -->
<!-- блок about -->
<div class="about">
	<!-- элемент title -->
	<div class="about__title"></div>
</div>
<!-- элемент subtitle-->
<div class="about__subtitle"></div>

- Элемент это необязательный компонент блока

создавать элемент нужно в случае если элемент, элементы не могут использоваться самостоятельно
без родительского блока

##################################

Модификатор - применяется для определения или уточнения внешнего вида или состояния или поведения 
блока или элемента, когда нужно выделить некий объект из множества таких же

имя модификатора должно отвечать на вопрос - какой? как выглядит? как себя ведет? состояние?

имя класса записывается путем дублирования основного класса с добавлением одного нижнего
подчеркивания и имени модификатора

имяклассаблока_модификатор
имяклассаблока__имяэлемента_модификатор

<!-- меню - это блок -->
<nav class="menu">
	<!-- menu__item это элемент блока меню -->
	<!-- menu__item menu__item_active это модификатор элемента блока меню -->
	<a href="#" class="menu__item menu__item_active">text</a>
	<a href="#" class="menu__item">text</a>
	<a href="#" class="menu__item">text</a>
	<a href="#" class="menu__item">text</a>
</nav>

##################################
##################################

Прием МИКС - позволяет использовать и блоки и элементы в одном объекте

миксы позволяют совмещать поведение и стили нескольких объектов 
без дублирования кода

создавать семантически новые компоненты интерфейса на основе существующих

<!-- микс -->
<!-- блок about -->
<div class="about">
	<!-- элемент title блока about и одновременно блок title -->
	<div class="about__title title"></div>
	<!-- элемент subtitle блока about и одновременно блок subtitle -->
	<div class="about__title subtitle"></div>
</div>

такой подход позволяет нам задать внешнюю геометрию либо позиционирование элементу about__title,
а сам блок title оставить универсальным, таким образом блок title - можно будет использовать
в любом другом месте, дублировать его
