1) npm init -y
2) npm install webpack webpack-cli --save-dev
3) npm install webpack-dev-server --save-dev
4) npm install --save-dev cross-env

!!!

в файле package.json существует системная переменная, которая относится к node.js 
и ей могут задаваться два значения, либо development, либо production,
по умолчанию - это development

если с этим возникают проблемы, ставим пакет под номером (4)

  "scripts": {
    "start": "set NODE_ENV=development&&webpack serve --open",
    "watch": "webpack --watch",
    "dev": "set NODE_ENV=development&&webpack",
    "build": "set NODE_ENV=production&&webpack"
  },

5) npm install --save-dev html-webpack-plugin
6) npm install style-loader css-loader postcss-loader postcss postcss-preset-env sass-loader sass mini-css-extract-plugin --save-dev

немного о кэшировании

представим что все наши файлы загружены на сервер и к ним идет обращение клиента через браузер
- при первом обращении к этим файлам копии с сервера в кэш на компьютер клиента
- при последующих обращениях к серверу браузер клиента проверяет кэш,
  если имена файлов в кэше совпадают с именами файлов на сервере то браузер загружает файлы с компьютера клиента
  
а теперь представим что разработчик изменил какие-либо стили css и загрузил их на сервер
при очередном обращении браузера на сервер он или клиент увидит что имена совпадают и
не загрузит с сервера все измененные файлы => всвязи с этим перед расширением файлов
добавляется hash и при каждой компиляции файла hash уникален

28:44 не работает к версией "webpack": "^5.75.0"

7) npm install --save-dev html-loader
8) npm install puh pug-loader --save-dev

https://html2jade.org/

конвертер из html в pug

- pug сломался на image миксине